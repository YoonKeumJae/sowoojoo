{"version":3,"file":"component---src-pages-notice-js-f4b5ecd87b516473b378.js","mappings":"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","sources":["webpack://swj/./src/components/ListLayout.js","webpack://swj/./src/images/sowoojooLogo.png","webpack://swj/./src/components/Layout.js","webpack://swj/./src/styles/global.js","webpack://swj/./src/pages/notice.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled, { css } from \"styled-components\";\n\nconst ListWrapper = styled.div`\n  margin-top: 1rem;\n`;\n\nconst PostList = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: ${(props) => (props.styleType === \"album\" ? \"grid\" : \"block\")};\n  grid-template-columns: ${(props) =>\n    props.styleType === \"album\"\n      ? \"repeat(auto-fit, minmax(200px, 1fr))\"\n      : \"none\"};\n  gap: ${(props) => (props.styleType === \"album\" ? \"1rem\" : \"0\")};\n`;\n\nconst PostItem = styled.li`\n  ${(props) =>\n    props.styleType === \"list\"\n      ? css`\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin: 0.5rem 0;\n          padding: 0.5rem;\n          border-bottom: 1px solid #ddd;\n        `\n      : props.styleType === \"album\"\n      ? css`\n          background-color: white;\n          border: 1px solid #ddd;\n          border-radius: 10px;\n          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n          padding: 1rem;\n          text-align: center;\n          transition: transform 0.2s, box-shadow 0.2s;\n\n          &:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n          }\n        `\n      : css`\n          margin: 1rem 0;\n          padding: 1rem;\n          background-color: white;\n          border: 1px solid #ddd;\n          border-radius: 10px;\n          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n          transition: transform 0.2s, box-shadow 0.2s;\n          display: flex;\n          justify-content: space-between;\n\n          &:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n          }\n        `}\n`;\n\nconst PostLink = styled(Link)`\n  text-decoration: none;\n  color: #333;\n  font-size: ${(props) => (props.styleType === \"list\" ? \"1rem\" : \"1.2rem\")};\n  font-weight: bold;\n\n  &:hover {\n    color: rgb(242, 167, 59);\n  }\n`;\n\nconst PostDate = styled.span`\n  font-size: ${(props) => (props.styleType === \"list\" ? \"0.9rem\" : \"1rem\")};\n  color: #888;\n  margin-top: ${(props) => (props.styleType === \"album\" ? \"0.5rem\" : \"0\")};\n  display: ${(props) => (props.styleType === \"album\" ? \"block\" : \"inline\")};\n`;\n\nconst Thumbnail = styled.img`\n  width: 100%;\n  height: auto;\n  border-radius: 10px;\n  margin-bottom: 0.5rem;\n`;\n\nconst ListLayout = ({ posts, styleType = \"card\" }) => {\n  const validPosts = posts.filter(\n    (post) => post && post.fields && post.fields.slug // null 값 및 slug 없는 항목 제거\n  );\n\n  return (\n    <ListWrapper>\n      <PostList styleType={styleType}>\n        {validPosts.map((post) => (\n          <PostItem key={post.fields.slug} styleType={styleType}>\n            {post.frontmatter.thumbnail && (\n              <Thumbnail src={post.frontmatter.thumbnail} alt={post.frontmatter.title} />\n            )}\n            <PostLink to={post.fields.slug} styleType={styleType}>\n              {post.frontmatter.title}\n            </PostLink>\n            <PostDate styleType={styleType}>{post.frontmatter.date}</PostDate>\n          </PostItem>\n        ))}\n      </PostList>\n    </ListWrapper>\n  );\n};\n\nexport default ListLayout;\n","export default __webpack_public_path__ + \"static/sowoojooLogo-7a1d77e2d585f224e1414fa4939c19e3.png\";","import { Link, graphql, useStaticQuery } from \"gatsby\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport sowoojooLogo from \"../images/sowoojooLogo.png\";\n\nconst LayoutWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: auto; /* 콘텐츠 높이에 따라 동적으로 설정 */\n`;\n\nconst Header = styled.header`\n  color: black;\n  padding: 1rem;\n  text-align: center;\n  height: 200px;\n`;\n\nconst Footer = styled.footer`\n  margin-top: 2rem;\n  background-color: rgb(150, 150, 150);\n  color: white;\n  padding: 1rem;\n  text-align: center;\n  height: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Main = styled.main`\n  flex: 1; /* 남은 공간을 차지 */\n  padding: 0 400px;\n  min-height: calc(\n    100vh - 300px - 2rem\n  ); /* 100vh에서 Header(200px)와 Footer(100px)의 높이를 뺌 */\n  overflow-y: auto;\n`;\n\nconst Title = styled(Link)`\n  font-size: 2rem;\n`;\n\nconst Img = styled.img`\n  width: 200px;\n`;\n\nconst Nav = styled.nav`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  margin-top: 1rem;\n`;\n\nconst NavLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n  font-size: 1.2rem;\n  font-weight: bold;\n  height: 40px;\n  width: 120px;\n  border-radius: 20px;\n  box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.2);\n  text-align: center;\n\n  color: rgb(242, 167, 59);\n  &:hover {\n    color: white;\n    background-color: rgb(242, 167, 59);\n  }\n`;\n\nconst Dropdown = styled.div`\n  position: relative;\n  display: inline-block;\n\n  &:hover > div {\n    display: block; /* 호버 시 드롭다운 메뉴 표시 */\n  }\n`;\n\nconst DropdownContent = styled.div`\n  display: none; /* 기본적으로 숨김 */\n  position: absolute;\n  background-color: white;\n  color: black;\n  min-width: 120px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  z-index: 1;\n  top: 100%; /* 네비게이션 바 아래에 표시 */\n  left: 0;\n\n  a {\n    display: block;\n    padding: 10px 16px;\n    color: rgb(242, 167, 59);\n    text-decoration: none;\n    font-size: 1rem;\n    font-weight: bold;\n    border-radius: 4px;\n\n    &:hover {\n      background-color: rgb(242, 167, 59);\n      color: white;\n    }\n  }\n`;\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      markdownRemark(fileAbsolutePath: { regex: \"/content/footer/\" }) {\n        html\n      }\n    }\n  `);\n\n  const footerContent =\n    data?.markdownRemark?.html || \"<p>Footer 내용이 없습니다.</p>\"; // 데이터가 없을 경우 기본 메시지 표시\n\n  return (\n    <LayoutWrapper>\n      <Header>\n        <Title to=\"/\">\n          <Img src={sowoojooLogo} alt=\"소우주\" />\n        </Title>\n        <Nav>\n          <Dropdown>\n            <NavLink to=\"/about/info\">소개</NavLink>\n            <DropdownContent>\n              <Link to=\"/about/info\">정보</Link>\n              <Link to=\"/about/history\">연혁</Link>\n            </DropdownContent>\n          </Dropdown>\n          <Dropdown>\n            <NavLink to=\"/programs/lecture\">교육 프로그램</NavLink>\n            <DropdownContent>\n              <Link to=\"/programs/lecture\">강의</Link>\n              <Link to=\"/programs/experience\">체험</Link>\n              <Link to=\"/programs/puppet-show\">인형극</Link>\n            </DropdownContent>\n          </Dropdown>\n          <NavLink to=\"/activities\">활동내역</NavLink>\n          <NavLink to=\"/notice\">공지사항</NavLink>\n          <NavLink to=\"/map\">오시는 길</NavLink> {/* 경로 수정 */}\n        </Nav>\n      </Header>\n      <Main>{children}</Main>\n      <Footer>\n        <div dangerouslySetInnerHTML={{ __html: footerContent }} />\n      </Footer>\n    </LayoutWrapper>\n  );\n};\n\nexport default Layout;\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  html, body {\n    height: 100%;\n  }\n\n  body {\n    font-family: 'Arial', sans-serif;\n    background-color: #f4f6f9;\n    color: #2c3e50;\n    line-height: 1.6;\n    display: flex;\n    flex-direction: column;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    color: #2c3e50;\n  }\n\n  #___gatsby, #gatsby-focus-wrapper {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n  }\n\n  a {\n    color: #3498db;\n    text-decoration: none;\n  }\n\n  ul {\n    list-style: none;\n  }\n`;\n\nexport default GlobalStyle;\n","import React, { useState } from \"react\";\nimport { graphql } from \"gatsby\";\nimport GlobalStyle from \"../styles/global\";\nimport Layout from \"../components/Layout\";\nimport ListLayout from \"../components/ListLayout\";\nimport styled from \"styled-components\";\n\nconst HeaderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n`;\n\nconst Dropdown = styled.select`\n  background-color: rgb(242, 167, 59);\n  color: white;\n  border: none;\n  border-radius: 20px;\n  padding: 0.5rem 1rem;\n  font-size: 1rem;\n  font-weight: bold;\n  cursor: pointer;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n\n  &:hover {\n    background-color: rgb(200, 140, 50);\n  }\n`;\n\nconst PaginationWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 1rem;\n`;\n\nconst PageButton = styled.button`\n  background-color: ${(props) =>\n    props.active ? \"rgb(242, 167, 59)\" : \"white\"};\n  color: ${(props) => (props.active ? \"white\" : \"rgb(242, 167, 59)\")};\n  border: 1px solid rgb(242, 167, 59);\n  border-radius: 5px;\n  padding: 0.5rem 1rem;\n  margin: 0 0.5rem;\n  font-size: 1rem;\n  cursor: pointer;\n\n  &:hover {\n    background-color: rgb(242, 167, 59);\n    color: white;\n  }\n`;\n\nconst NoticePage = ({ data }) => {\n  const [sortOrder, setSortOrder] = useState(\"desc\"); // 기본 정렬: 날짜 역순\n  const [currentPage, setCurrentPage] = useState(1); // 현재 페이지\n  const notices = [...data.allMarkdownRemark.nodes]; // 데이터 복사\n\n  const itemsPerPage = 10; // 한 페이지에 표시할 게시글 수\n  const totalPages = Math.ceil(notices.length / itemsPerPage); // 총 페이지 수\n\n  // 정렬 로직\n  const sortedNotices = notices.sort((a, b) => {\n    const dateA = new Date(a.frontmatter.date);\n    const dateB = new Date(b.frontmatter.date);\n    return sortOrder === \"asc\" ? dateA - dateB : dateB - dateA;\n  });\n\n  // 현재 페이지에 해당하는 게시글 가져오기\n  const paginatedNotices = sortedNotices.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  // 페이지 변경 시 스크롤 맨 위로 이동\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n    window.scrollTo({ top: 0, behavior: \"smooth\" }); // 부드럽게 스크롤\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <Layout>\n        <HeaderWrapper>\n          <h1>공지사항</h1>\n          <Dropdown\n            value={sortOrder}\n            onChange={(e) => setSortOrder(e.target.value)}\n          >\n            <option value=\"desc\">최신순</option>\n            <option value=\"asc\">오래된순</option>\n          </Dropdown>\n        </HeaderWrapper>\n        {paginatedNotices.length > 0 ? (\n          <ListLayout posts={paginatedNotices} />\n        ) : (\n          <p>공지사항이 없습니다.</p>\n        )}\n        <PaginationWrapper>\n          {Array.from({ length: totalPages }, (_, index) => (\n            <PageButton\n              key={index + 1}\n              active={currentPage === index + 1}\n              onClick={() => handlePageChange(index + 1)}\n            >\n              {index + 1}\n            </PageButton>\n          ))}\n        </PaginationWrapper>\n      </Layout>\n    </>\n  );\n};\n\nexport default NoticePage;\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/content/notice/\" } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      nodes {\n        frontmatter {\n          title\n          date(formatString: \"YYYY-MM-DD\")\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n"],"names":["ListWrapper","styled","div","withConfig","displayName","componentId","PostList","ul","props","styleType","PostItem","li","css","PostLink","Link","PostDate","span","Thumbnail","img","_ref","posts","validPosts","filter","post","fields","slug","React","map","key","frontmatter","thumbnail","src","alt","title","to","date","LayoutWrapper","Header","header","Footer","footer","Main","main","Title","Img","Nav","nav","NavLink","Dropdown","DropdownContent","_data$markdownRemark","children","data","useStaticQuery","footerContent","markdownRemark","html","sowoojooLogo","dangerouslySetInnerHTML","__html","GlobalStyle","createGlobalStyle","HeaderWrapper","select","PaginationWrapper","PageButton","button","active","sortOrder","setSortOrder","useState","currentPage","setCurrentPage","notices","_toConsumableArray","allMarkdownRemark","nodes","totalPages","Math","ceil","length","paginatedNotices","sort","a","b","dateA","Date","dateB","slice","Layout","value","onChange","e","target","ListLayout","Array","from","_","index","onClick","window","scrollTo","top","behavior"],"sourceRoot":""}